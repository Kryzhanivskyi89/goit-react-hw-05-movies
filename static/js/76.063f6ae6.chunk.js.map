{"version":3,"file":"static/js/76.063f6ae6.chunk.js","mappings":"kOACA,EAAuB,mBAAvB,EAAgD,kBAAhD,EAAkF,4B,SC+DlF,EAvDa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCH,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACND,GAAe,IACfE,EAAAA,EAAAA,GAAY,SAAD,OAAUL,EAAV,aACVM,MAAK,SAAAC,GACFR,EAAQQ,EAAKT,MACbK,GAAe,EAClB,IACAK,MAAMC,QAAQC,IAClB,GAAE,CAACV,IAECF,GAKD,8BACCA,EAAKa,OAAS,GACX,wBACCb,EAAKc,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACnB,gBAAaC,UAAWC,EAAxB,UACCF,GACG,gBACIG,IAAG,yCAAoCH,GACvCI,IAAKN,EACLO,MAAM,MACNJ,UAAWC,KAGf,gBAAKD,UAAWC,EAAhB,8BAEJ,4BACI,wBACI,uBAAIJ,OAER,wCACW,uBAAIC,YAhBVF,EADU,OAwBvB,yCA/BG,8BAAGZ,IAAe,SAACqB,EAAA,EAAD,KAmC5B,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__a0CDL\",\"img\":\"Cast_img__-isbW\",\"imageNotFound\":\"Cast_imageNotFound__nP+5K\"};","import React from \"react\"\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\n\nimport fetchMovies from '../../components/API/api';\nimport Loader  from 'components/Loader/Loader';\nimport style from './Cast.module.css';\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const { movieId } = useParams();\n    const [showLoading, setShowLoading] = useState(false);\n\n    useEffect(() => {\n        setShowLoading(true);\n        fetchMovies(`movie/${movieId}/credits`)\n        .then(data => {\n            setCast(data.cast);\n            setShowLoading(false);\n        })\n        .catch(console.log);\n    }, [movieId]);\n\n    if (!cast) {\n        return <>{showLoading && <Loader />}</>;\n    }\n\n    return (\n        <>\n        {cast.length > 0 ? (\n            <ul>\n            {cast.slice(0, 19).map(({ id, name, character, profile_path }) => (\n                <li key={id} className={style.item}>\n                {profile_path ? (\n                    <img\n                        src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                        alt={name}                    \n                        width=\"100\"\n                        className={style.img}\n                    />\n                ) : (\n                    <div className={style.imageNotFound}>Image not found</div>\n                )}\n                <div>\n                    <p>\n                        <b>{name}</b>\n                    </p>\n                    <p>\n                    Character: <b>{character}</b>\n                    </p>\n                </div>\n                </li>\n            ))}\n            </ul>\n        ) : (\n            <div>No casts</div>\n        )}\n        </>\n    );\n    };\n\n\n\nexport default Cast"],"names":["useState","cast","setCast","movieId","useParams","showLoading","setShowLoading","useEffect","fetchMovies","then","data","catch","console","log","length","slice","map","id","name","character","profile_path","className","style","src","alt","width","Loader"],"sourceRoot":""}