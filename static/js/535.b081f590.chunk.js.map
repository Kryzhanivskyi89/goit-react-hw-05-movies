{"version":3,"file":"static/js/535.b081f590.chunk.js","mappings":"0NACA,GAAgB,UAAY,0BAA0B,WAAa,2BAA2B,iBAAmB,iCAAiC,kBAAoB,kCAAkC,gBAAkB,iC,SCgC1N,EA7BkB,SAAC,GAAuC,IAAD,EAApCA,EAAoC,EAApCA,gBAOXC,EAAU,UAPqC,EAAnBC,aAOFC,IAAI,gBAApB,QAAgC,GAEhD,OACI,gBAAKC,UAAWC,EAAAA,UAAhB,UACI,kBAAMD,UAAWC,EAAAA,WAAkBC,SAVtB,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAASF,EAAEG,OAAOC,SAASF,OAAOG,MACxCZ,EAAgB,CAAEa,MAAOJ,GAC5B,EAMO,WACI,mBAAQK,KAAK,SAASV,UAAWC,EAAAA,iBAAjC,UACI,iBAAMD,UAAWC,EAAAA,0BAAjB,uBAEJ,kBACID,UAAWC,EAAAA,kBACXU,KAAK,SACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,aAAclB,QAKjC,E,2BCoBD,EAzCe,WAEX,OAAwCmB,EAAAA,EAAAA,MAAxC,eAAOlB,EAAP,KAAqBF,EAArB,KACA,GAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAsCJ,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACD1B,EAAaC,IAAI,WACtBwB,GAAe,GACfJ,EAAU,OAEVM,EAAAA,EAAAA,GAAY,eAAgB3B,EAAaC,IAAI,UACxC2B,MAAK,SAAAC,GACFR,EAAUQ,EAAKC,SACfP,EAAcM,EAAKE,eACnBN,GAAe,EAClB,IACAO,MAAMC,QAAQC,KACxB,GAAE,CAAClC,KAIE,iCACI,SAAC,EAAD,CACIF,gBAAiBA,EACjBE,aAAcA,IAGjBwB,IAAe,SAACW,EAAA,EAAD,IACff,GAA4B,IAAlBA,EAAOgB,SACd,gBAAKlC,UAAWC,EAAAA,EAAAA,UAAhB,UACI,SAACkC,EAAA,EAAD,CAAYC,WAAYlB,MAGhB,IAAfE,IAAoB,gDAGhC,C","sources":["webpack://react-homework-template/./src/components/Searchbar/styles.module.css?29b2","components/Searchbar/Searchbar.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"styles_searchbar__WemNa\",\"SearchForm\":\"styles_SearchForm__f4eKS\",\"SearchformButton\":\"styles_SearchformButton__fVqBt\",\"searchform__input\":\"styles_searchform__input__LYi6s\",\"SearchformInput\":\"styles_SearchformInput__tKwpo\"};","import PropTypes from 'prop-types';\r\nimport style from './styles.module.css'\r\n\r\n\r\nconst Searchbar = ({ setSearchParams, searchParams }) => {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const search = e.target.elements.search.value;\r\n        setSearchParams({ query: search });\r\n    };\r\n\r\n    const inputValue = searchParams.get('query') ?? '';\r\n\r\n    return (\r\n        <div className={style.searchbar}>            \r\n            <form className={style.SearchForm} onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className={style.SearchformButton}>\r\n                    <span className={style.searchform__button__label}>Search</span>\r\n                </button>\r\n                <input\r\n                    className={style.searchform__input}\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search movies\"                    \r\n                    defaultValue={inputValue}\r\n                />\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbar;\r\nSearchbar.propTypes = {\r\n  setSearchParams: PropTypes.func,\r\n  searchParams: PropTypes.object,\r\n};","import React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport fetchMovies from '../../components/API/api';\r\nimport Searchbar from \"components/Searchbar/Searchbar\";\r\nimport MovieItems from '../../components/MovieItems/MovieItems'\r\nimport Loader from \"components/Loader/Loader\";\r\nimport style from '../Home/style.module.css';\r\n \r\nconst Movies = () => {\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [movies, setMovies] = useState([]);\r\n    const [totalMovie, setTotalMovie] = useState(1);\r\n    const [showLoading, setShowLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!searchParams.get('query')) return;\r\n        setShowLoading(true);\r\n        setMovies(null);\r\n\r\n        fetchMovies(`search/movie`, searchParams.get('query'))\r\n            .then(data => {\r\n                setMovies(data.results);\r\n                setTotalMovie(data.total_results);\r\n                setShowLoading(false);\r\n            })\r\n            .catch(console.log);\r\n  }, [searchParams]);\r\n    \r\n  \r\n    return (\r\n        <>\r\n            <Searchbar\r\n                setSearchParams={setSearchParams}\r\n                searchParams={searchParams}\r\n            />\r\n            \r\n            {showLoading && <Loader />}\r\n            {movies && movies.length !== 0 &&\r\n                <div className={style.movieList}>\r\n                    <MovieItems movieItems={movies} />\r\n                </div>\r\n            }\r\n            {totalMovie === 0 && <div>Not found movies</div>}\r\n        </>        \r\n    )\r\n}\r\n\r\n\r\nexport default Movies"],"names":["setSearchParams","inputValue","searchParams","get","className","style","onSubmit","e","preventDefault","search","target","elements","value","query","type","name","autoComplete","autoFocus","placeholder","defaultValue","useSearchParams","useState","movies","setMovies","totalMovie","setTotalMovie","showLoading","setShowLoading","useEffect","fetchMovies","then","data","results","total_results","catch","console","log","Loader","length","MovieItems","movieItems"],"sourceRoot":""}