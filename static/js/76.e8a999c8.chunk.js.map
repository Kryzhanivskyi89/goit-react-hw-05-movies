{"version":3,"file":"static/js/76.e8a999c8.chunk.js","mappings":"kOACA,EAA2B,uBAA3B,EAAyD,mBAAzD,EAAkF,kBAAlF,EAAoH,4B,SC+DpH,EAvDa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCH,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACND,GAAe,IACfE,EAAAA,EAAAA,GAAY,SAAD,OAAUL,EAAV,aACVM,MAAK,SAAAC,GACFR,EAAQQ,EAAKT,MACbK,GAAe,EAClB,IACAK,MAAMC,QAAQC,IAClB,GAAE,CAACV,IAECF,GAKD,8BACCA,EAAKa,OAAS,GACX,eAAIC,UAAWC,EAAf,SACCf,EAAKgB,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACnB,gBAAaP,UAAWC,EAAxB,UACCM,GACG,gBACIC,IAAG,yCAAoCD,GACvCE,IAAKJ,EACLK,MAAM,MACNV,UAAWC,KAGf,gBAAKD,UAAWC,EAAhB,8BAEJ,4BACI,wBACI,uBAAII,OAER,wCACW,uBAAIC,YAhBVF,EADU,OAwBvB,yCA/BG,8BAAGd,IAAe,SAACqB,EAAA,EAAD,KAmC5B,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"item\":\"Cast_item__a0CDL\",\"img\":\"Cast_img__-isbW\",\"imageNotFound\":\"Cast_imageNotFound__nP+5K\"};","import React from \"react\"\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nimport fetchMovies from '../../components/API/api';\r\nimport Loader  from 'components/Loader/Loader';\r\nimport style from './Cast.module.css';\r\n\r\nconst Cast = () => {\r\n    const [cast, setCast] = useState(null);\r\n    const { movieId } = useParams();\r\n    const [showLoading, setShowLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setShowLoading(true);\r\n        fetchMovies(`movie/${movieId}/credits`)\r\n        .then(data => {\r\n            setCast(data.cast);\r\n            setShowLoading(false);\r\n        })\r\n        .catch(console.log);\r\n    }, [movieId]);\r\n\r\n    if (!cast) {\r\n        return <>{showLoading && <Loader />}</>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {cast.length > 0 ? (\r\n            <ul className={style.castList}>\r\n            {cast.slice(0, 19).map(({ id, name, character, profile_path }) => (\r\n                <li key={id} className={style.item}>\r\n                {profile_path ? (\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w500${profile_path}`}\r\n                        alt={name}                    \r\n                        width=\"264\"\r\n                        className={style.img}\r\n                    />\r\n                ) : (\r\n                    <div className={style.imageNotFound}>Image not found</div>\r\n                )}\r\n                <div>\r\n                    <p>\r\n                        <b>{name}</b>\r\n                    </p>\r\n                    <p>\r\n                    Character: <b>{character}</b>\r\n                    </p>\r\n                </div>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n        ) : (\r\n            <div>No casts</div>\r\n        )}\r\n        </>\r\n    );\r\n    };\r\n\r\n\r\n\r\nexport default Cast"],"names":["useState","cast","setCast","movieId","useParams","showLoading","setShowLoading","useEffect","fetchMovies","then","data","catch","console","log","length","className","style","slice","map","id","name","character","profile_path","src","alt","width","Loader"],"sourceRoot":""}